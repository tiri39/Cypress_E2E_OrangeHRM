const { faker } = require('@faker-js/faker');

describe('OrangeHRM End to End Testing', () => {
    const adminUserName = "Admin"
    const adminPassword = "admin123"
    const employeeDataFile = 'employeeData.json';

    function generateRandomPassword() {
        const chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()_+';
        let password = '';
        for (let i = 0; i < 11; i++) {
          password += chars.charAt(Math.floor(Math.random() * chars.length));
        }
        password += '1';
        return password;
      }

    before(() => {
    // Before all tests, visit the base URL
    cy.visit('/');
    cy.title().should("eq", "OrangeHRM")
    
  });

  it('OrangeHRM e2e flow', () => {

    //1. Login as Admin
    // entering admin credentials
    cy.get("input[name='username']").type(adminUserName);
    cy.get("input[name='password']").type(adminPassword); 
    // click login button
    cy.get("button[type='submit']").click();
    // login validation
    cy.waitTillVisible('h6')
    cy.get('h6').should("have.text", "Dashboard")
    //-------------------------------------------------------

    //2. Create a New Employee
    // navigating to PIM
    cy.get("span").contains("PIM").click()
    cy.waitTillVisible('h6')
    cy.get('h6').should("have.text", "PIM")
    //click on add button
    cy.get("button[type='button']").contains("Add").click()
    cy.waitTillVisible('h6')
    // Create a new employee using Faker
    const firstName = faker.name.firstName();
    const lastName = faker.name.lastName();
    const fullName = firstName+" "+lastName
    let employeeId;
    const username = firstName + lastName
    const password = generateRandomPassword()
    //entering first and last name generated by Faker library
    cy.get("input[name='firstName'").type(firstName)
    cy.get("input[name='lastName']").type(lastName)
    cy.get("label").contains("Employee Id").parent().siblings("div").find("input").invoke('val').then((employeeId) => {
    //clicking on create login details toggle
    cy.get("input[type='checkbox']").click({ force: true });
    //filling the login details
    cy.get('label').contains("Username").parent().siblings('div').find('input').type(username);
    cy.get('label').contains("Password").parent().siblings('div').find('input').type(password);
    cy.get('label').contains("Confirm Password").parent().siblings('div').find('input').type(password);
    cy.get("button[type='submit']").click();
    //asserting successful employee creation 
    cy.get('.oxd-text--toast-message').should("have.text", "Successfully Saved");
    cy.waitTillVisible('h6');
    cy.get('h6').should("contain.text", fullName);
    // Save Employee Details to a file
    cy.writeFile(`cypress/fixtures/${employeeDataFile}`, {
      username,
      password,
      employeeId
    });
    //-------------------------------------------------------

    //3. Search by Employee ID
    cy.contains("Employee List").click();
    cy.get("label").contains("Employee Id").parent().siblings("div").find("input").type(employeeId);
    cy.contains('button', 'Search').click();
    cy.wait(2000);
    cy.contains('div', employeeId).should('be.visible');
    });    
    //-------------------------------------------------------

    //4. Search in Directory by Employee Name
    //clicking on directory
    cy.get("span").contains("Directory").click()
    cy.waitTillVisible("h5")
    // typing the firstName in the employee name
    cy.get("input[placeholder='Type for hints...']").type(firstName)
    cy.wait(2000)
    // getting the locator from the API response from the cypress execution snapshot
    cy.get('.oxd-autocomplete-option > span').click()
    //clicking on search
    cy.get("button[type='submit']").click()
    cy.get(".orangehrm-directory-card-header")
      .invoke('text')
      .then((text) => {
        const normalizedText = text.replace(/\s+/g, ' ').trim(); // Collapse multiple spaces into one and trim
        expect(normalizedText).to.eq(fullName);
      });
    //-------------------------------------------------------

    //5. Log out as admin.
    cy.get("span img").click()
    cy.get("li a").contains("Logout").click()
    cy.waitTillVisible("h5")
    //-------------------------------------------------------

    //6. Login with New Employee 
    cy.fixture(employeeDataFile).then((employee)=>{
        //providing employee credentials
        cy.get("input[name='username'").type(employee.username)
        cy.get("input[name='password'").type(employee.password)
        cy.get("[type='submit']").click()
        // Assert that the Newly Created Employee Full Name is showing beside the profile icon.
        cy.get("p.oxd-userdropdown-name").should("have.text",fullName)
      })
    //-------------------------------------------------------

    //7. Update My Info
    //clicking on my info
    cy.get("span").contains("My Info").click()
    cy.waitTillVisible('h6')
    cy.get('h6').should("contain.text", "Personal Details")
    cy.get('label').contains('Male').click();
    // Locate the element containing the '* Required' text
    cy.contains('Required').parents().find('button').first().click();
    cy.contains('.oxd-label', 'Blood Type').parent() .next() .find('.oxd-select-text--after') .click();  
    cy.get('.oxd-select-dropdown > div').eq(5).click();
    cy.contains('button', 'Save').click();
    cy.get('#oxd-toaster_1').should('contain.text', 'Success');
    //-------------------------------------------------------

    //8. Logout as new employee
    cy.get("span img").click()
    cy.get("li a").contains("Logout").click()
    cy.waitTillVisible("h5")

  });

});